# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      
      - name: Create LICENSE file if missing
        run: |
          if [ ! -f LICENSE ]; then
            echo "Creating LICENSE file..."
            echo "MIT License" > LICENSE
            echo "" >> LICENSE
            echo "Copyright (c) $(date +%Y) Alexander01998" >> LICENSE
            echo "" >> LICENSE
            echo "Permission is hereby granted, free of charge, to any person obtaining a copy" >> LICENSE
            echo "of this software and associated documentation files (the \"Software\"), to deal" >> LICENSE
            echo "in the Software without restriction, including without limitation the rights" >> LICENSE
            echo "to use, copy, modify, merge, publish, distribute, sublicense, and/or sell" >> LICENSE
            echo "copies of the Software, and to permit persons to whom the Software is" >> LICENSE
            echo "furnished to do so, subject to the following conditions:" >> LICENSE
            echo "" >> LICENSE
            echo "The above copyright notice and this permission notice shall be included in all" >> LICENSE
            echo "copies or substantial portions of the Software." >> LICENSE
          fi
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      
      - name: Configure Build Environment
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << EOF
          org.gradle.parallel=true
          org.gradle.caching=true
          org.gradle.daemon=false
          org.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError
          systemProp.org.gradle.internal.http.connectionTimeout=180000
          systemProp.org.gradle.internal.http.socketTimeout=180000
          systemProp.org.gradle.internal.repository.max.retries=10
          systemProp.org.gradle.internal.repository.initial.backoff=1000
          systemProp.https.protocols=TLSv1.2,TLSv1.3
          EOF
      
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      
      - name: Fix code style
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_wait_seconds: 30
          command: ./gradlew spotlessApply --no-daemon --stacktrace --info
      
      - name: Commit format changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'style: 自动修复代码格式'
          file_pattern: '*.java'
      
      - name: Build project
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_wait_seconds: 30
          command: ./gradlew build --no-daemon --stacktrace --info
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
